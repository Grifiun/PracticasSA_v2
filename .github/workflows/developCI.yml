name: SA_P3 CI

on:
  pull_request:
    branches:
      - develop

jobs:
  build_stage:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version:
          - 21.7.0

    steps:
      - name: Checkout and copy code to workflow
        uses: actions/checkout@v2

      # Configure Node
      - name: Configure Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}

      #  Configurar microservicios
      - name: Install and Build Microservice age
        run: |
          cd age_microservice/
          npm install
          npm run build

      - name: Install and Build Microservice gender
        run: |
          cd gender_microservice/
          npm install
          npm run build

      - name: Install and Build Microservice name
        run: |
          cd name_microservice/
          npm install
          npm run build

  delivery_stage:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version:
          - 21.7.0

    env:
      REGION_REGISTRY: us-east1-docker.pkg.dev
      PROJECT_ID: carbon-ray-415302
      REPOSITORY: sa
      ENVIRONMENT: develop

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '21.7.0'
      
      # Configurar Entorno de Desarrollo
      - name: Replace image name in k8s config
        run: |
          ls 
          for file in ./k8s/*.yaml; do
            envsubst '${ENVIRONMENT}' < "$file" > "${file%.yaml}.temp"
            mv "${file%.yaml}.temp" "$file"
          done
      
      # Configurar credenciales de Google Cloud Platform
      - id: 'auth'
        uses: 'google-github-actions/auth@v2'
        with:
          credentials_json: '${{ secrets.GCP_CREDENTIALS }}'

      - name: 'Set up Cloud SDK'
        uses: 'google-github-actions/setup-gcloud@v2'

      - name: 'Use gcloud CLI'
        run: 'gcloud info'
        
      # Configurar Tags automaticamente
      - name: Automatic Tagging of Releases
        id: increment-git-tag
        run: |
          bash scripts/git_update.sh -v patch 

      # Debug Tag
      - name: Debug Git Tag
        run: |
          echo "Git Tag: <${{ steps.increment-git-tag.outputs.git-tag }}>"      

      # Configurar Docker con autenticaci√≥n de Google Cloud
      - name: Configure Docker
        run: |
          gcloud auth configure-docker --quiet
          gcloud auth configure-docker $REGION_REGISTRY --quiet
          
      # Configurar microservicios
      - name: Push Docker Image to Artifact Registry Microservice age
        env:
          GIT_TAG: ${{ steps.increment-git-tag.outputs.git-tag }}
          IMAGE_NAME_MS: node_microservice_age_${{ env.ENVIRONMENT }}
        run: |
          bash scripts/build_and_push_image.sh --directory="name_microservice/" --region="$REGION_REGISTRY" --project_id="$PROJECT_ID" --repository="$REPOSITORY" --image_name="$IMAGE_NAME_MS" --tag="$GIT_TAG" 

      - name: Push Docker Image to Artifact Registry Microservice gender
        env:
          GIT_TAG: ${{ steps.increment-git-tag.outputs.git-tag }}
          IMAGE_NAME_MS: node_microservice_gender_${{ env.ENVIRONMENT }}
        run: |
          bash scripts/build_and_push_image.sh --directory="gender_microservice/" --region="$REGION_REGISTRY" --project_id="$PROJECT_ID" --repository="$REPOSITORY" --image_name="$IMAGE_NAME_MS" --tag="$GIT_TAG" 

      - name: Push Docker Image to Artifact Registry Microservice name
        env:
          GIT_TAG: ${{ steps.increment-git-tag.outputs.git-tag }}
          IMAGE_NAME_MS: node_microservice_name_${{ env.ENVIRONMENT }}
        run: |
          bash scripts/build_and_push_image.sh --directory="name_microservice/" --region="$REGION_REGISTRY" --project_id="$PROJECT_ID" --repository="$REPOSITORY" --image_name="$IMAGE_NAME_MS" --tag="$GIT_TAG" 
        
      # Kubernets
      - name: Deploy to GKE cluster
        uses: ameydev/gke-kubectl-action@master
        env:
          PROJECT_ID: carbon-ray-415302
          APPLICATION_CREDENTIALS: ${{ secrets.GCP_CREDENTIALS_BASE64 }}
          CLUSTER_NAME: cluster-pr2
          ZONE_NAME: us-central1-c
        with:
          args: apply -f k8s/